{"version":3,"sources":["resources/images/breaking-bad.png","components/appHeader/AppHeader.js","services/BreakingBadService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/seasonsList/SeasonsList.js","components/charList/CharList.js","components/episodeChars/EpisodeChars.js","components/aboutEpisode/AboutEpisode.js","components/pages/404.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","src","logo","alt","exact","activeStyle","BreakingBadService","_apiBase","_baseOffset","getResource","url","a","fetch","res","ok","Error","json","result","getAllCharacters","map","_transformCharacter","getAllCharactersOffset","offset","getCharacter","id","getCharacterByName","name","getEpisodeById","_transformEpisodes","getAllEpisodes","episod","episode_id","title","season","episode","air_date","characters","series","char","char_id","description","occupation","slice","birthday","img","nickname","category","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","View","RandomChar","useState","setChar","loading","setLoading","error","setError","breakingBadService","useEffect","updateChar","Math","floor","random","then","data","onCharLoaded","catch","onError","errorMessage","spinner","content","onClick","SeasonsList","props","episods","setEpisods","onOpenRequest","onEpisodsLoaded","i","onMouseEnter","e","preventDefault","epis","onEpisodeSelected","CharList","charList","setCharList","setOffset","charEnded","setCharEnded","newItemLoading","setNewItemLoading","onRequest","onCharsLoading","onCharsLoaded","newCharList","ended","length","item","disabled","EpisodeChars","chars","AboutEpisode","setEpis","Page404","App","setChars","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1df06ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/breaking-bad.0ac09ef2.png\";","import './appHeader.scss';\nimport {Link, NavLink} from 'react-router-dom';\n\n\nimport logo from '../../resources/images/breaking-bad.png';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <div className=\"app__title\">\n                <Link to=\"/\">                    \n                    <img src={logo} alt=\"breaking bad\"/>\n                </Link>\n            </div>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink exact activeStyle={{'color' : '#1b9f00'}} to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink exact activeStyle={{'color' : '#1b9f00'}} to=\"/episodes\">Episodes</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class BreakingBadService {\n    _apiBase = 'https://www.breakingbadapi.com/api/';\n    // // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\n    // _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\n    _baseOffset = 0;\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n    \n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: `);\n        }\n\n        let result = await res.json();\n        return result;\n    }\n\n    getAllCharacters = async () => {\n        const res = await this.getResource(`${this._apiBase}characters`);\n        return res.map(this._transformCharacter);\n    }\n\n    getAllCharactersOffset = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=4&offset=${offset}`);\n        return res.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}`);\n        return this._transformCharacter(res[0]);\n    }\n\n    getCharacterByName = async (name) => {\n        const res = await this.getResource(`${this._apiBase}characters?name=${name}`);\n        return res.map(this._transformCharacter);\n    }\n\n    getEpisodeById = async (id) => {\n        const res = await this.getResource(`${this._apiBase}episodes/${id}`);\n        return this._transformEpisodes(res[0]);\n    }\n\n    getAllEpisodes = async () => {\n        const res = await this.getResource(`${this._apiBase}episodes`);\n        return res.map(this._transformEpisodes);\n    }\n\n    _transformEpisodes = (episod) => {\n        return {\n            id: episod.episode_id,\n            title: episod.title,\n            season: episod.season,\n            episode: episod.episode,\n            air_date: episod.air_date,\n            characters: episod.characters,\n            series: episod.series\n        }\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.char_id,\n            name: char.name,\n            description: char.occupation ? `${char.occupation.slice(0, 150)}` : 'There is no description for this character',\n            birthday: char.birthday,\n            img: char.img,\n            nickname: char.nickname,\n            category: char.category,\n        }\n    }\n}\n\nexport default BreakingBadService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useState, useEffect } from 'react'\r\nimport BreakingBadService from \"../../services/BreakingBadService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport './randomChar.scss';\r\n\r\nconst RandomChar = () => {\r\n    const [char, setChar] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const breakingBadService = new BreakingBadService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    }, []);\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n        setLoading(false);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        const id = Math.floor(Math.random() * (57 - 1)) + 1;\r\n        breakingBadService.getCharacter(id)\r\n            .then(result => result)\r\n            .then(data => onCharLoaded(data))\r\n            .catch(onError);\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !loading && char ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <section className=\"random\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"random_update\">\r\n                <div className=\"random_update__text\">If you want to change the character, click the button below</div>\r\n                <button onClick={updateChar} className=\"btn random_update__btn\">Next</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, img, nickname, category} = char;\r\n\r\n    return ( \r\n        <div className=\"random_char\">\r\n            <div className=\"random_char__img\">\r\n                <img src={img} alt={name}/>\r\n            </div>\r\n            <div className=\"random_char__text\">\r\n                <div className=\"random_char__title\">{name}/{nickname}</div>\r\n                <div className=\"random_char__descr\">Occupation: {description}<br/><br/>{category}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport BreakingBadService from '../../services/BreakingBadService';\r\nimport './seasonsList.scss';\r\n\r\nconst SeasonsList = (props) => {\r\n\r\n    const [episods, setEpisods] = useState([]);\r\n\r\n    const breakingBadService = new BreakingBadService();\r\n\r\n    const fifes = ['1', '2', '3', '4', '5'];\r\n\r\n    useEffect(() => {\r\n        onOpenRequest();\r\n    }, []);\r\n\r\n    const onOpenRequest = () => {\r\n        breakingBadService.getAllEpisodes()\r\n            .then(result => result)\r\n            .then(data => onEpisodsLoaded(data))\r\n    }\r\n\r\n    const onEpisodsLoaded = (data) => {\r\n        setEpisods([...data]);\r\n    }\r\n\r\n    return (\r\n        <aside className=\"seasons\">\r\n            <div className=\"seasons_title\">Seasons</div>\r\n            <ul className=\"seasons_list\">\r\n                {fifes.map(i => {\r\n                    return (\r\n                    <li key={i} className='seasons_list__item'>\r\n                        <span onMouseEnter={e => {e.preventDefault();}}>\r\n                            Seasons {i}\r\n                                <ul>\r\n                                {episods.map(epis => epis.season === i ? <li key={epis.id} className='episod' onClick={e => props.onEpisodeSelected(epis)}><Link to={`/episodes/${epis.id}`}>{epis.episode}.{epis.title}</Link></li> : null)}\r\n                                </ul>    \r\n                        </span>\r\n                    </li>\r\n                )})}\r\n                {/*<li className='seasons_list__item'>\r\n                     <span onMouseEnter={e => {e.preventDefault();onOpenList(2)}}>\r\n                        Seasons 2\r\n                        <ul>\r\n                            {episods.map(epis => epis.season === '2' ? <View key={epis.id} epis={epis} onClick={props.onEpisodeSelected(epis)}/> : null)}\r\n                        </ul>\r\n                    </span> \r\n                </li>*/}\r\n                {/* <li className='seasons_list__item'>\r\n                    <span onMouseEnter={e => {e.preventDefault();onOpenList(3)}}>\r\n                        Seasons 3\r\n                        <ul>\r\n                            {episods.map(epis => epis.season === '3' ? <View key={epis.id} epis={epis} onClick={props.onEpisodeSelected(epis)}/> : null)}\r\n                        </ul>\r\n                    </span> \r\n                    \r\n                </li>*/}\r\n                {/* <li className='seasons_list__item'>\r\n                    <span onMouseEnter={e => {e.preventDefault();onOpenList(4)}}>\r\n                        Seasons 4\r\n                        <ul>\r\n                            {episods.map(epis => epis.season === '4' ? <View key={epis.id} epis={epis} onClick={props.onEpisodeSelected(epis)}/> : null)}\r\n                        </ul>\r\n                    </span> \r\n                </li>*/}\r\n                {/* <li className='seasons_list__item'>\r\n                    <span onMouseEnter={e => {e.preventDefault();onOpenList(5)}}>\r\n                        Seasons 5\r\n                        <ul>\r\n                            {episods.map(epis => epis.season === '5' ? <View key={epis.id} epis={epis} onClick={props.onEpisodeSelected(epis)}/> : null)}\r\n                        </ul>\r\n                    </span> \r\n                    \r\n                </li>*/}\r\n            </ul>\r\n        </aside>\r\n    )\r\n}\r\n\r\n// const View = ({epis}) => {\r\n//     const {title, episode} = epis;\r\n//     const classname = episode === '1' ? 'episod first_episod' : 'episod';\r\n\r\n//     return (\r\n//         <li className={classname}>{episode}.{title}</li>\r\n//     )\r\n// }\r\n\r\nexport default SeasonsList;","import { useState, useEffect } from 'react'\r\nimport BreakingBadService from \"../../services/BreakingBadService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport './charList.scss';\r\n\r\nconst CharList = () => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [offset, setOffset] = useState(0);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const breakingBadService = new BreakingBadService();\r\n\r\n    useEffect(() => {\r\n        onRequest();\r\n    }, []);\r\n\r\n    const onRequest = (offset) =>  {\r\n        onCharsLoading();\r\n        breakingBadService.getAllCharactersOffset(offset)\r\n            .then(result => result)\r\n            .then(data => onCharsLoaded(data))\r\n            .catch(onError);\r\n    }\r\n\r\n    const onCharsLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 4) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setOffset(offset => offset + 4);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setLoading(loading => false);\r\n        setCharEnded(charEnded => ended);\r\n    }\r\n\r\n    const onCharsLoading = () => {\r\n        setNewItemLoading(true);\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = charList && !loading && !error ? charList.map(item => <View key={item.id} char={item}/>) : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n\r\n    return (\r\n        <section className=\"chars\">\r\n            {errorMessage}\r\n            {spinner}\r\n            <div className=\"chars_list\">\r\n                {content}\r\n            </div>\r\n            <button disabled={newItemLoading} onClick={() => onRequest(offset)} style={{'display': charEnded ? 'none' : 'inline-block'}} className=\"btn chars_btn\">Load more</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, img, nickname} = char;\r\n\r\n    return (\r\n        <div className=\"chars_item\">\r\n            <div className=\"chars_item__img\">\r\n                <img src={img} alt='walter'/>\r\n            </div>\r\n            <div className=\"chars_item__name\">{name}/{nickname}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharList;","import { useState, useEffect } from 'react';\r\nimport BreakingBadService from '../../services/BreakingBadService';\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nconst EpisodeChars = (props) => {\r\n    \r\n    const [charList, setCharList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n// 'Walter White', 'Jesse Pinkman', 'Skyler White'\r\n    const [chars, setChars] = useState(props.chars);\r\n\r\n    const breakingBadService = new BreakingBadService();\r\n    \r\n    useEffect(() => {\r\n        onRequest();\r\n    }, []);\r\n\r\n    const onRequest = () =>  {\r\n        chars.map(name => {\r\n            breakingBadService.getCharacterByName(name)\r\n                .then(result => result)\r\n                .then(data => onCharsLoaded(data))\r\n                .catch(onError)\r\n        });\r\n    }\r\n\r\n    const onCharsLoaded = (char) => {\r\n        if (char[0]) {\r\n            setCharList(charList => [...charList, char[0]]);\r\n        }\r\n        \r\n        setLoading(loading => false);\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    const spinner = loading ? <Spinner/> : null;\r\n    //<View key={item.id} char={item}/>\r\n    const content = charList && !loading && !error ? charList.map(item => <View key={item.id} char={item}/>) : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n\r\n    return (\r\n        <section className=\"chars\">\r\n            {errorMessage}\r\n            {spinner}\r\n            <div className=\"chars_list\">\r\n                {content}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, img, nickname} = char;\r\n\r\n    return (\r\n        <div className=\"chars_item\">\r\n            <div className=\"chars_item__img\">\r\n                <img src={img} alt={name}/>\r\n            </div>\r\n            <div className=\"chars_item__name\">{name}/{nickname}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpisodeChars;","import {useState, useEffect} from 'react';\r\nimport BreakingBadService from '../../services/BreakingBadService';\r\nimport './aboutEpisode.scss'\r\n\r\nconst AboutEpisode = (props) => {\r\n\r\n    const [epis, setEpis] = useState(null);\r\n\r\n    // const breakingBadService = new BreakingBadService();\r\n\r\n    useEffect(() => {\r\n        setEpis(props.epis);\r\n    }, []);\r\n\r\n    // const onRequest = () => {\r\n    //     breakingBadService.getEpisodeById(51)\r\n    //         .then(result => result)\r\n    //         .then(data => onEpisodLoaded(data));};\r\n    // }\r\n\r\n    // const onEpisodLoaded = (episode) => {\r\n    //     setEpis(episode);\r\n    // }\r\n    \r\n    const content = epis ? <View epis={epis}/> : null;\r\n    \r\n\r\n    return (\r\n        <aside className='aboutEpisode'>\r\n            <h4 className=\"aboutEpisode_about\">About episode</h4>\r\n            {content}\r\n        </aside>\r\n    )\r\n}\r\n\r\nconst View = ({epis}) => {\r\n    const {title, season, episode, air_date, characters} = epis;\r\n\r\n    return (\r\n            <>\r\n                <div className='aboutEpisode_title'><span>Title:</span> {title}</div>\r\n                <div className='aboutEpisode_season'><span>Seasons & Series:</span> {season}, {episode}</div>\r\n                <div className='aboutEpisode_date'><span>Air-date:</span> {air_date}</div>\r\n                <div className='aboutEpisode_chars'><span>Characters:</span>{characters.map(item => ` ${item},`)}</div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default AboutEpisode;","import ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\r\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to='/'>Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import { useState } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'; \nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport SeasonsList from \"../seasonsList/SeasonsList\";\nimport CharList from \"../charList/CharList\";\nimport EpisodeChars from \"../episodeChars/EpisodeChars\";\nimport AboutEpisode from \"../aboutEpisode/AboutEpisode\";\nimport { Page404 } from \"../pages\";\n// import  {MainPage, EpisodesPage} from '../pages';\n// import BreakingBadService from \"../../services/BreakingBadService\";\n// import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\n\n\nconst App = () => {\n\n    // const breakingBadService = new BreakingBadService();\n\n    // console.log(breakingBadService.getAllEpisodes().then(result => result[0].characters[0]));\n    // console.log(breakingBadService.getAllCharacters().then(result => result[0].name));\n    // console.log(breakingBadService.getCharacter(10).then(result => result.id));\n    \n    const [epis, setEpis] = useState();\n    const [chars, setChars] = useState([]);\n\n    const onEpisodeSelected = (epis) => {\n        setEpis(epis);\n        setChars(epis.characters);\n    };\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <div className=\"char__content\">                            \n                        <Switch>\n                            <Route exact path='/'>\n                                <RandomChar/>\n                                <div className=\"char__content_wrapper\">\n                                    <SeasonsList onEpisodeSelected={onEpisodeSelected}/>\n                                    <CharList/>\n                                </div>\n                            </Route>\n                            <Route exact path='/episodes/:episId'>\n                                <div className=\"char__content_wrapper\">\n                                    <AboutEpisode epis={epis}/>\n                                    <EpisodeChars chars={chars}/>\n                                </div>\n                            </Route>\n                            <Route exact path='*'>\n                                <Page404/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}